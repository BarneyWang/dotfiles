#!/usr/bin/env bash
#
# Extract archives of various types.
# USAGE: extract <FILE>

# Message in case when extractor is not found
function not_found {
  local e='\033'
  local RESET="${e}[0m"
  local RED="${e}[0;91m"
  echo -e "${RED}'$1' is not found!${RESET}"
  exit 127
}

# Help message
function help {
  echo "Extract archives of various types"
  echo
  echo "  USAGE: extract <FILE>"
}

# Show help message if there was a --help flag
if [[ "$1" == "--help" ]]; then
  help
  exit
fi

# If file exists, extract it
if [ -f "$1" ] ; then
  dir_name="${1%.*}"  # Filename without extension
  case "$1" in
    *.tar.bz2)  tar xjf              "$1"   || not_found 'tar'        ;;
    *.tar.gz)   tar xzf              "$1"   || not_found 'tar'        ;;
    *.tar.xz)   tar Jxvf             "$1"   || not_found 'tar'        ;;
    *.tar)      tar xf               "$1"   || not_found 'tar'        ;;
    *.tbz2)     tar xjf              "$1"   || not_found 'tar'        ;;
    *.tgz)      tar xzf              "$1"   || not_found 'tar'        ;;
    *.bz2)      bunzip2              "$1"   || not_found 'bunzip'     ;;
    *.rar)      unrar x              "$1" . || not_found 'unrar'      ;;
    *.gz)       gunzip               "$1"   || not_found 'gunzip'     ;;
    *.zip)      unzip -d "$dir_name" "$1"   || not_found 'unzip'      ;;
    *.Z)        uncompress           "$1"   || not_found 'uncompress' ;;
    *)          echo "'$1' cannot be extracted via extract()" ;;
  esac
else
  echo "'$1' is not a valid file"
  help
  exit 1
fi
